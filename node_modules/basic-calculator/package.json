{
  "name": "basic-calculator",
  "version": "1.0.5",
  "description": "A basic calculator module.",
  "main": "index.js",
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "basic-calculator"
  },
  "keywords": [
    "calculator",
    "calc",
    "math",
    "min",
    "max",
    "standard deviation",
    "population standard deviation",
    "sample standard deviation",
    "mode",
    "median",
    "mean",
    "statistics",
    "basic",
    "simple"
  ],
  "author": {
    "name": "Dylan Hamilton",
    "email": "dylan.hamilton@myfarms.com"
  },
  "license": "ISC",
  "url": "https://github.com/Dylan-Myfarms/basic-calculator",
  "bugs": {
    "url": "https://github.com/Dylan-Myfarms/basic-calculator/issues"
  },
  "dependencies": {
    "chai": "^3.3.0",
    "mocha": "^2.3.3",
    "test": "^0.6.0"
  },
  "readme": "# basic-calculator\r\nA basic calculator.\r\n\r\n## Features\r\n  - Basic Mathematic Operations (add, subtract, division, multiplication, modulus, square, square root, powers)\r\n  - Standard Deviation\r\n  - Population Standard Deviation\r\n  - Min (from array)\r\n  - Max (from array)\r\n  - Mode , Median, Mean\r\n  - Simple and Precision rounding\r\n  - Slope\r\n  - Calculate Percentages\r\n  - Random number generation between min/max\r\n  - Assertion Tests\r\n\r\n## Installation\r\n`npm install basic-calculator --save`\r\n\r\n## Run Tests\r\n`npm test`\r\n\r\n## Usage\r\n```javascript\r\nvar bc = require('basic-calculator');\r\n\r\n// add\r\nbc.add(1,2);\r\n// 3\r\n\r\n// subtract\r\nbc.sub(1,2);\r\n//-1\r\n\r\n// division\r\nbc.div(1,2);\r\n// 0.5\r\n\r\n// multiplication\r\nbc.mult(2,3);\r\n// 6\r\n\r\n// modulus\r\nbc.mod(5, 2);\r\n// 1\r\n\r\n// power\r\nbc.pow(2,10);\r\n// 1024\r\n\r\n// square\r\nbc.sqr(5);\r\n// 25\r\n\r\n// square root \r\nbc.sqrt(49);\r\n// 7\r\n\r\n// percent\r\nbc.perc(1, 5);\r\n// 20\r\n\r\n// slope\r\nbc.slope([1,-4], [-4, 2]);\r\n// -1.2\r\n\r\n// mean\r\nbc.mean([3,4,5,6,7]);\r\n// 5\r\n\r\n// median (even length)\r\nbc.median([1,2,3,4]);\r\n// [2,3]\r\n\r\n// median (odd length)\r\nbc.median([1,2,3]);\r\n// 2\r\n\r\n// mode (no ties)\r\nbc.mode([1,2,3,3,4,5]);\r\n// [3]\r\n\r\n// mode (with ties)\r\nbc.mode([1,1,2,3,4,4,5]);\r\n// [1,5]\r\n\r\n// max \r\nbc.max([20,4,1,5,6,29,90]);\r\n// 90\r\n\r\n// min\r\nbc.min([12,15,90,11,904,2]);\r\n// 2\r\n\r\n// round up \r\nbc.round(6.5);\r\n// 7\r\n\r\n// round down\r\nbc.round(6.49);\r\n// 6\r\n\r\n// round to specific number of decimals\r\nbc.roundTo(6.55, 1);\r\n// 6.6\r\n\r\n// standard deviation \r\nbc.sdeviation([9,2,5,4,12,7,8,11,9,3,7,4,12,5,4,10,9,6,9,4]);\r\n// 3.0607876523260447\r\n\r\n// population standard deviation\r\nbc.psdeviation([9,2,5,4,12,7,8,11,9,3,7,4,12,5,4,10,9,6,9,4]);\r\n// 2.9832867780352594\r\n\r\n// variance of standard deviation rounded to 4 digits\r\nvar variance = bc.variance([9,2,5,4,12,7,8,11,9,3,7,4,12,5,4,10,9,6,9,4], 'standard');\r\nvar rounded = bc.roundTo(variance, 4);\r\n// 9.3684\r\n\r\n// variance of population standard deviation\r\nbc.variance([9,2,5,4,12,7,8,11,9,3,7,4,12,5,4,10,9,6,9,4], 'population');\r\n// 8.9\r\n\r\n// random number between 10-100\r\nbc.random(10,100);\r\n// 55\r\n\r\n// random number between defaults (1,10)\r\nbc.random();\r\n// 5\r\n\r\n\r\n```\r\n",
  "readmeFilename": "README.md",
  "gitHead": "4076b4911c3f5a862d5e9028222a728c0c9b9388",
  "_id": "basic-calculator@1.0.5",
  "_shasum": "2962a058e776d0d985bfb9f64e724637f3676f0c",
  "_from": "basic-calculator@>=1.0.5 <2.0.0"
}
